# -*- coding: utf-8 -*-
"""18IT033_Numpy_Lab_Exercise.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t81An9ZT3JsaIkTzyqcNYDm6znWNQytp

# NumPy Lab Exercises 

Solve the following questions in Lab to test your knowledge on NumPy Package!

#### Import NumPy package as np
"""

import numpy as np

"""imp

#### Create an array of 20 0's
"""

np.zeros(20)

"""#### Create an array of 20 1's"""

np.ones(20)

"""#### Create an array containing 30 times 10"""

np.ones(30)*10

"""#### Create an array of integers starting from 21 until 31"""

np.arange(21,32)

"""#### Create an array of all even integers from 2 to 60"""

np.arange(2,61,2)

"""#### Create a 5x6 matrix with values ranging from 0 to 29"""

np.arange(0,30).reshape(5,6)

"""#### Create an identity matrix of shape 5x5"""

np.identity(5)

"""#### Use NumPy to generate a random set of 10 numbers between 0 and 1"""

np.random.rand(1,10)

"""#### Use NumPy to generate an array of 15 random numbers sampled from a standard normal distribution"""

np.random.normal(0,1,15)

"""#### Create the following 5x10 matrix with the values using arange,reshape and arithmetic operators:"""

np.arange(0.01,0.51,0.01).reshape(5,10)

"""#### Create an array of 30 linearly spaced points between 0 and 10:"""

np.linspace(0,10,30)

"""## Numpy Indexing and Selections

Using the below given Matrix, generate the output for the below questions
"""

arr1 = np.arange(1,101,1).reshape(10,10)
print(arr1)

"""#### Retrieve the last 2 rows and first 3 column values of the above matrix using index & selection technique"""

arr1[8:,0:3]

"""#### Retrieve the value 55 from the above matrix using index & selection technique"""

arr1[5:6,4:5]

"""#### Retrieve the values from the 3rd column in the above matrix"""

arr1[0:,2:3].flatten()

"""#### Retrieve the values from the 4th row in the above matrix"""

arr1[3:4,:]

"""#### Retrieve values from the 2nd & 4th rows in the above matrix"""

arr1[[2,4],:]

"""#### Calculate sum of all the values in the matrix"""

np.sum(arr1)

"""#### Calculate standard deviation of all the values in the matrix"""

np.std(arr1)

"""#### Calculate the variance of all values in the matrix"""

np.var(arr1)

"""#### Calculate the mean of all values in the matrix"""

np.mean(arr1)

"""### End of Lab Exercise - NumPy"""